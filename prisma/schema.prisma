// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  email     String     @unique
  password  String
  name      String
  avatarUrl String?
  confirmed Boolean    @default(false)
  token     Token[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  roles     UserRole[]
}

model Token {
  userId    Int
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([projectId, userId])
}

enum BillingType {
  Free
  Paid
}

model Billing {
  id        Int         @id @default(autoincrement())
  projectId Int         @unique
  project   Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  type      BillingType
}

model Project {
  id        Int        @id @default(autoincrement())
  name      String
  slug      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  token     Token[]
  billing   Billing?
  roles     UserRole[]
  Invite    Invite[]
}

model Invite {
  id        Int     @id @default(autoincrement())
  email     String
  projectId Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@unique([projectId, email])
}

enum RoleType {
  User
  Admin
  Owner
}

model UserRole {
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  role      RoleType @default(User)

  @@unique([projectId, userId])
}
